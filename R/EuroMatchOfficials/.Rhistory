read_csv('../../data/prep_data.csv')
?csv
?read
read.csv('../../data/prep_data.csv')
df <- read.csv('../../data/prep_data.csv')
library(tidyverse)
df
df <- read.csv('../../data/prep_data.csv')
df
?read.csv
#glm(result ~ .,df)
df %>% select(-match_api_id, -date, -home_team_api_id)
df <- read.csv('../../data/prep_data.csv')
df
#glm(result ~ .,df)
df %>% select(
-match_api_id, -date,
-home_team_api_id, -home_team_name,
-away_team_name, -away_team_api_id,
-home_team_goal, -away_team_goal)
logit <- glm(result ~ .,small)
small <- df %>% select(
-match_api_id, -date,
-home_team_api_id, -home_team_name,
-away_team_name, -away_team_api_id,
-home_team_goal, -away_team_goal)
logit <- glm(result ~ .,small)
?glm
logit <- glm(result ~ .,small, family = 'binomial')
logit <- multinom(result ~ .,small)
library(nnet)
logit <- multinom(result ~ .,small)
summary(logit)
summary(logit)
sample(1:nrow(small))
-[train]
-train
-(train)
train <- sample(1:nrow(small))
-(train)
-train
-[train]
-[train,]
(1:nrow(small))[-train]
(1:nrow(small))[,-train]
(1:nrow(small))[-train,]
(1:nrow(small))[-train]
1:nrow(small)
1:nrow(small)[train]
(1:nrow(small))[train]
(1:nrow(small))[-train]
(1:nrow(small))[-(train)]
(1:nrow(small))[-train]
train <- sample(1:nrow(small), nrow(small)*0.75)
(1:nrow(small))[-train]
test <- (1:nrow(small))[-train]
logit <- multinom(result ~ .,small[train,])
summary(logit)
?multinom
?predict
predict(logit, small[test,]) == small[test,]$result
mean(predict(logit, small[test,]) == small[test,]$result)
data.frame(train_res = train_res, test_res = test_res)
train_res = mean(predict(logit, small[train,]) == small[train,]$result)
test_res = mean(predict(logit, small[test,]) == small[test,]$result)
data.frame(train_res = train_res, test_res = test_res)
logit <- multinom(result ~ .*.,small[train,])
library(broom)
logit <- multinom(result ~ .,small[train,])
summary(logit) %>% tidy
summary(logit) %>% tidy()
logit %>% tidy()
logit %>% tidy() %>% filter(p.value < 0.05)
logit %>% tidy() %>% filter(p.value < 0.05) %>% mutate(odds_estimate = exp(estimate))
logit %>% tidy() %>% filter(p.value < 0.05) %>% mutate(odds_estimate = exp(estimate)) %>% select(-std.error, -statistic, -p.value)
logit %>% tidy() %>% filter(p.value < 0.05) %>% mutate(odds_estimate = exp(estimate)) %>% select(-std.error, -statistic, -p.value)
clean <- logit %>% tidy() %>% filter(p.value < 0.05) %>% mutate(odds_estimate = exp(estimate)) %>% select(-std.error, -statistic, -p.value)
clean
clean %>% filter(y.level= 'L)
clean %>% filter(y.level= 'L')
clean %>% filter(y.level== 'L')
clean %>% filter(y.level== 'L' & term == '(Intercept)'()
clean %>% filter(y.level== 'L' & term == '(Intercept)')
clean %>% filter(y.level== 'L' && term == '(Intercept)')
clean %>% filter(y.level== 'L' and term == '(Intercept)')
clean %>% filter(y.level== 'L' & term == '(Intercept)')
(clean %>% filter(y.level== 'L' & term == '(Intercept)'))$estimate
clean %>% filter(y.level == 'L' & term != '(Intercept)')
clean %>% filter(y.level == 'L' & term != '(Intercept)') %>% select(estimate)
clean
slopes <- clean %>% filter(y.level == 'L' & term != '(Intercept)') %>% select(estimate)
clean
library(MASS)
step.model <- stepAIC(logit, direction = "both", trace = FALSE)
step.model %>% tidy()
train_res = mean(predict(step.model, small[train,]) == small[train,]$result)
test_res = mean(predict(step.model, small[test,]) == small[test,]$result)
data.frame(train_res = train_res, test_res = test_res)
prem.df <- read.csv('../../data/prem_data.csv')
prem.df <- read.csv('../../data/prem_data_elo.csv')
prem.df
prem.df %>% select(-home_team_api_id_y, -away_team_api_id_y)
prem.df# %>% select(-home_team_api_id_y, -away_team_api_id_y)
library(tidyverse)
library(nnet)
library(broom)
library(MASS)
prem.df %>% select(-home_team_api_id_y, -away_team_api_id_y)
prem.df %>% select(-home_team_api_id_y)#, -away_team_api_id_y)
prem.df %>% select(home_team_api_id_y)#, -away_team_api_id_y)
?select
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nnet)
library(broom)
prem.df %>% select(home_team_api_id_y)#, -away_team_api_id_y)
prem.df <- read.csv('../../data/prem_data_elo.csv')
prem.df %>% select(home_team_api_id_y)#, -away_team_api_id_y)
prem.df %>% select(., -home_team_api_id_y)#, -away_team_api_id_y)
?select
prem.df %>% Select( -home_team_api_id_y)#, -away_team_api_id_y)
prem.df %>% dpylr::select( -home_team_api_id_y)#, -away_team_api_id_y)
library(dplyr)
prem.df %>% dpylr::select( -home_team_api_id_y)#, -away_team_api_id_y)
prem.df %>% dplyr::select( -home_team_api_id_y)#, -away_team_api_id_y)
prem.df %>% dplyr::select( -home_team_api_id_y, -away_team_api_id_y)
prem.df <- prem.df %>% dplyr::select( -home_team_api_id_y, -away_team_api_id_y)
small <- prem.df %>% select(
-match_api_id, -date,
-home_team_api_id, -home_team_name,
-away_team_name, -away_team_api_id,
-home_team_goal, -away_team_goal)
small <- prem.df %>% dplyr::select(
-match_api_id, -date,
-home_team_api_id, -home_team_name,
-away_team_name, -away_team_api_id,
-home_team_goal, -away_team_goal)
prem.df
small <- prem.df %>% dplyr::select(
-match_api_id, -date,
-home_team_api_id, -home_team_name,
-away_team_name, -away_team_api_id,
-home_team_goal, -away_team_goal)
colnames(prem.df)
small <- prem.df %>% dplyr::select(
-match_api_id, -date, -league_id,
-home_team_api_id_x, -home_team_name,
-away_team_name, -away_team_api_id_x,
-home_team_goal, -away_team_goal)
train <- sample(1:nrow(small), nrow(small)*0.75)
test <- (1:nrow(small))[-train]
logit <- multinom(result ~ .,small[train,])
clean <- logit %>% tidy() %>% filter(p.value < 0.05) %>% mutate(odds_estimate = exp(estimate)) %>% select(-std.error, -statistic, -p.value)
clean <- logit %>% tidy() %>% filter(p.value < 0.05) %>% mutate(odds_estimate = exp(estimate)) %>% dplyr::select(-std.error, -statistic, -p.value)
train_res = mean(predict(step.model, small[train,]) == small[train,]$result)
test_res = mean(predict(step.model, small[test,]) == small[test,]$result)
data.frame(train_res = train_res, test_res = test_res)
logit %>% tidy()
?glm
?multinom
